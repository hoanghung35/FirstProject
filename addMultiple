// ==================== 1. Model ====================
public class Employee
{
    public int Id { get; set; }
    public string Name { get; set; }
    public int Age { get; set; }
}

// ==================== 3. API Controller ====================
using Microsoft.AspNetCore.Mvc;
using OfficeOpenXml;

[Route("api/[controller]")]
[ApiController]
public class ExcelApiController : ControllerBase
{
    private readonly AppDbContext _context;

    public ExcelApiController(AppDbContext context)
    {
        _context = context;
        ExcelPackage.LicenseContext = LicenseContext.NonCommercial;
    }

    [HttpPost("upload")]
    public async Task<IActionResult> UploadExcel([FromForm] IFormFile file)
    {
        if (file == null || file.Length == 0)
            return BadRequest("Chưa chọn file!");

        using (var stream = new MemoryStream())
        {
            await file.CopyToAsync(stream);
            using (var package = new ExcelPackage(stream))
            {
                var ws = package.Workbook.Worksheets.First();
                for (int row = 2; row <= ws.Dimension.End.Row; row++)
                {
                    var emp = new Employee
                    {
                        Name = ws.Cells[row, 1].Text,
                        Age = int.Parse(ws.Cells[row, 2].Text)
                    };
                    _context.Employees.Add(emp);
                }
                await _context.SaveChangesAsync();
            }
        }

        return Ok("Import thành công!");
    }

    [HttpGet("export")]
    public async Task<IActionResult> ExportExcel()
    {
        var employees = await _context.Employees.ToListAsync();

        using (var package = new ExcelPackage())
        {
            var ws = package.Workbook.Worksheets.Add("Employees");
            ws.Cells["A1"].Value = "Name";
            ws.Cells["B1"].Value = "Age";

            for (int i = 0; i < employees.Count; i++)
            {
                ws.Cells[i + 2, 1].Value = employees[i].Name;
                ws.Cells[i + 2, 2].Value = employees[i].Age;
            }

            ws.Cells[ws.Dimension.Address].AutoFitColumns();

            var stream = new MemoryStream();
            package.SaveAs(stream);
            stream.Position = 0;

            return File(stream, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "Employees.xlsx");
        }
    }
}

// ==================== 4. Gọi API từ View (sử dụng jQuery) ====================
@{
    ViewData["Title"] = "Excel API Import/Export";
}
<h2>Upload Excel (API)</h2>
<input type="file" id="excelFile" />
<button onclick="uploadExcel()">Upload Excel</button>

<p id="result"></p>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function uploadExcel() {
        var file = $('#excelFile')[0].files[0];
        var formData = new FormData();
        formData.append("file", file);

        $.ajax({
            url: '/api/ExcelApi/upload',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                $('#result').text(response);
            },
            error: function (err) {
                $('#result').text("Có lỗi xảy ra.");
            }
        });
    }
</script>

<h3>Export Excel (API)</h3>
<a href="/api/ExcelApi/export"><button>Tải Excel</button></a>

// ==================== 5. Program.cs setup ====================
var builder = WebApplication.CreateBuilder(args);

builder.Services.AddControllers();
builder.Services.AddDbContext<AppDbContext>(options =>
    options.UseNpgsql(builder.Configuration.GetConnectionString("DefaultConnection")));

var app = builder.Build();
app.UseStaticFiles();
app.UseRouting();
app.MapControllers();
app.MapFallbackToFile("index.html");
app.Run();
